name: ci

on:
  push:
    branches: [ main, dev ]
  pull_request:
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Maven build (unit tests)
        run: mvn -q -DskipITs=true -DskipIT=true -B clean package

      - name: Upload jars
        uses: actions/upload-artifact@v4
        with:
          name: jars
          path: |
            order-manager/target/order-manager-*.jar
            delivery-tracker/target/delivery-tracker-*.jar

  it-compose:
    runs-on: ubuntu-latest
    needs: build-test
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: demo
          POSTGRES_PASSWORD: demo
          POSTGRES_DB: demo
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd="pg_isready -U demo -d demo"
          --health-interval=5s --health-timeout=3s --health-retries=20
      artemis:
        image: vromero/activemq-artemis:latest
        env:
          ARTEMIS_USERNAME: admin
          ARTEMIS_PASSWORD: admin
        ports: [ "61616:61616" ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Wait for deps
        run: |
          for i in {1..60}; do
            nc -z localhost 5432 && nc -z localhost 61616 && break
            sleep 2
          done

      - name: Run integration tests (profile docker)
        env:
          SPRING_PROFILES_ACTIVE: docker
          ACTIVEMQ_BROKER_URL: tcp://localhost:61616
        run: |
          mvn -q -B -pl order-manager,delivery-tracker -am test

  docker-publish:
    runs-on: ubuntu-latest
    needs: [ build-test ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta (OM)
        id: meta_om
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/order-manager
          tags: |
            type=ref,event=branch
            type=sha
      - name: Build+push OM
        uses: docker/build-push-action@v6
        with:
          context: ./order-manager
          push: true
          tags: ${{ steps.meta_om.outputs.tags }}
          labels: ${{ steps.meta_om.outputs.labels }}

      - name: Docker meta (DT)
        id: meta_dt
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/delivery-tracker
          tags: |
            type=ref,event=branch
            type=sha
      - name: Build+push DT
        uses: docker/build-push-action@v6
        with:
          context: ./delivery-tracker
          push: true
          tags: ${{ steps.meta_dt.outputs.tags }}
          labels: ${{ steps.meta_dt.outputs.labels }}
